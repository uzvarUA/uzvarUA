#!/data/data/com.termux/files/usr/bin/bash

# üé® ASCII-–±–∞–Ω–µ—Ä
clear
echo -e "\e[1;35m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo -e "‚ïë üé¨ Bash –í—ñ–¥–µ–æ-–ú–æ–Ω—Ç–∞–∂–µ—Ä v1.0       ‚ïë"
echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\e[0m"

# üì¶ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
for tool in yt-dlp ffmpeg find; do
  command -v $tool >/dev/null || {
    echo "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $tool. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —á–µ—Ä–µ–∑ pkg –∞–±–æ pip."
    exit 1
  }
done

# üîó –í–≤–µ–¥–µ–Ω–Ω—è URL
read -p "üîó –í—Å—Ç–∞–≤—Ç–µ URL –≤—ñ–¥–µ–æ: " url
[[ -z "$url" ]] && echo "‚ùå URL –Ω–µ –≤–∫–∞–∑–∞–Ω–æ. –í–∏—Ö—ñ–¥." && exit 1

# üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
yt-dlp -f bestvideo+bestaudio --merge-output-format mp4 "$url" -o "%(title)s.%(ext)s"

# üß† –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –≤—ñ–¥–µ–æ
latest=$(find . -maxdepth 1 -name "*.mp4" -printf "%T@ %p\n" | sort -nr | head -n1 | cut -d' ' -f2-)
base="${latest%.*}"
output="${base}_montage.mp4"

# üéõÔ∏è –ú–µ–Ω—é —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ–π
echo -e "\nüéõÔ∏è –û–±–µ—Ä—ñ—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó:"
echo "1) üîÅ –†–µ–≤–µ—Ä—Å"
echo "2) ‚úÇÔ∏è  –û–±—Ä—ñ–∑–∫–∞ (–ø–µ—Ä—à—ñ 10 —Å–µ–∫)"
echo "3) üåí –ó–∞—Ç–µ–º–Ω–µ–Ω–Ω—è"
echo "4) üñºÔ∏è  –í—Å—Ç–∞–≤–∫–∞ –ª–æ–≥–æ—Ç–∏–ø—É"
echo "5) ‚úÖ –í—Å–µ –æ–¥—Ä–∞–∑—É"
read -p "üëâ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä (–º–æ–∂–Ω–∞ –∫—ñ–ª—å–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª): " choice

# ‚öôÔ∏è –ü–æ–±—É–¥–æ–≤–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
filters=""
audio_filter=""
trim=""
logo="logo.png"

for opt in $choice; do
  case $opt in
    1) filters+="reverse,"; audio_filter="areverse" ;;
    2) trim="-t 10" ;;
    3) filters+="eq=brightness=-0.3," ;;
    4) if [[ -f "$logo" ]]; then
         filters+="overlay=10:10,"
       else
         echo "‚ö†Ô∏è –õ–æ–≥–æ—Ç–∏–ø $logo –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ."
       fi ;;
    5) filters="reverse,eq=brightness=-0.3,overlay=10:10,"; audio_filter="areverse"; trim="-t 10" ;;
  esac
done

# üßπ –û—á–∏—Å—Ç–∫–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
filters="${filters%,}"

# üß™ –ü–æ–±—É–¥–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∏ ffmpeg
cmd="ffmpeg -i \"$latest\""
[[ -n "$trim" ]] && cmd+=" $trim"
[[ -n "$filters" ]] && cmd+=" -vf \"$filters\""
[[ -n "$audio_filter" ]] && cmd+=" -af \"$audio_filter\""
cmd+=" \"$output\""

# üöÄ –í–∏–∫–æ–Ω–∞–Ω–Ω—è
echo -e "\nüöÄ –í–∏–∫–æ–Ω—É—î–º–æ –∫–æ–º–∞–Ω–¥—É:"
echo "$cmd"
eval "$cmd" 2>&1 | tee "${base}_log.txt"

# ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è
echo -e "\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ó–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫: $output"
termux-open "$output"
